/**
 * This file was auto-generated by Fern from our API Definition.
 */
import * as serializers from "../../../../../../../../..";
import { Rivet } from "../../../../../../../../../..";
import * as core from "../../../../../../../../../../core";
export declare const GameMode: core.serialization.ObjectSchema<serializers.cloud.version.matchmaker.GameMode.Raw, Rivet.cloud.version.matchmaker.GameMode>;
export declare namespace GameMode {
    interface Raw {
        regions?: Record<string, serializers.cloud.version.matchmaker.GameModeRegion.Raw> | null;
        max_players?: number | null;
        max_players_direct?: number | null;
        max_players_party?: number | null;
        docker?: serializers.cloud.version.matchmaker.GameModeRuntimeDocker.Raw | null;
        listable?: boolean | null;
        taggable?: boolean | null;
        allow_dynamic_max_players?: boolean | null;
        actions?: serializers.cloud.version.matchmaker.GameModeActions.Raw | null;
        tier?: string | null;
        idle_lobbies?: serializers.cloud.version.matchmaker.GameModeIdleLobbiesConfig.Raw | null;
    }
}
