/**
 * This file was auto-generated by Fern from our API Definition.
 */
import * as environments from "../../../../environments";
import * as core from "../../../../core";
import { Rivet } from "../../../..";
export declare namespace Module {
    interface Options {
        environment?: environments.RivetEnvironment | string;
        token?: core.Supplier<core.BearerToken | undefined>;
    }
}
export declare class Module {
    private readonly options;
    constructor(options: Module.Options);
    /**
     * Makes a request to a module's script.
     *
     * @throws {Rivet.InternalError}
     * @throws {Rivet.RateLimitError}
     * @throws {Rivet.ForbiddenError}
     * @throws {Rivet.UnauthorizedError}
     * @throws {Rivet.NotFoundError}
     * @throws {Rivet.BadRequestError}
     */
    call(module: string, script: string, request: Rivet.module_.FindLobbyRequest): Promise<Rivet.module_.CallResponse>;
    private _getAuthorizationHeader;
}
