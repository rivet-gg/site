/**
 * This file was auto-generated by Fern from our API Definition.
 */
import * as environments from "../../../../../../../../environments";
import * as core from "../../../../../../../../core";
import { Rivet } from "../../../../../../../..";
export declare namespace Avatars {
    interface Options {
        environment?: environments.RivetEnvironment | string;
        token?: core.Supplier<core.BearerToken | undefined>;
    }
}
export declare class Avatars {
    private readonly options;
    constructor(options: Avatars.Options);
    /**
     * Lists custom avatars for the given game.
     * @throws {Rivet.InternalError}
     * @throws {Rivet.RateLimitError}
     * @throws {Rivet.ForbiddenError}
     * @throws {Rivet.UnauthorizedError}
     * @throws {Rivet.NotFoundError}
     * @throws {Rivet.BadRequestError}
     */
    listGameCustomAvatars(gameId: string): Promise<Rivet.cloud.games.ListGameCustomAvatarsResponse>;
    /**
     * Prepares a custom avatar image upload.
     * Complete upload with `rivet.api.cloud#CompleteCustomAvatarUpload`.
     * @throws {Rivet.InternalError}
     * @throws {Rivet.RateLimitError}
     * @throws {Rivet.ForbiddenError}
     * @throws {Rivet.UnauthorizedError}
     * @throws {Rivet.NotFoundError}
     * @throws {Rivet.BadRequestError}
     */
    prepareCustomAvatarUpload(gameId: string, request: Rivet.cloud.games.PrepareCustomAvatarUploadRequest): Promise<Rivet.cloud.games.PrepareCustomAvatarUploadResponse>;
    /**
     * Completes a custom avatar image upload. Must be called after the file upload process completes.
     * @throws {Rivet.InternalError}
     * @throws {Rivet.RateLimitError}
     * @throws {Rivet.ForbiddenError}
     * @throws {Rivet.UnauthorizedError}
     * @throws {Rivet.NotFoundError}
     * @throws {Rivet.BadRequestError}
     */
    completeCustomAvatarUpload(gameId: string, uploadId: string): Promise<void>;
    private _getAuthorizationHeader;
}
