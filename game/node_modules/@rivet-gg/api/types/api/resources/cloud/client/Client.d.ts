/**
 * This file was auto-generated by Fern from our API Definition.
 */
import * as environments from "../../../../environments";
import * as core from "../../../../core";
import { Rivet } from "../../../..";
import { Games } from "../resources/games/client/Client";
import { Auth } from "../resources/auth/client/Client";
import { Devices } from "../resources/devices/client/Client";
import { Groups } from "../resources/groups/client/Client";
import { Logs } from "../resources/logs/client/Client";
import { Tiers } from "../resources/tiers/client/Client";
import { Uploads } from "../resources/uploads/client/Client";
export declare namespace Cloud {
    interface Options {
        environment?: environments.RivetEnvironment | string;
        token?: core.Supplier<core.BearerToken | undefined>;
    }
}
export declare class Cloud {
    private readonly options;
    constructor(options: Cloud.Options);
    /**
     * Returns the basic information required to use the cloud APIs.
     * @throws {Rivet.InternalError}
     * @throws {Rivet.RateLimitError}
     * @throws {Rivet.ForbiddenError}
     * @throws {Rivet.UnauthorizedError}
     * @throws {Rivet.NotFoundError}
     * @throws {Rivet.BadRequestError}
     */
    bootstrap(): Promise<Rivet.cloud.BootstrapResponse>;
    private _games;
    get games(): Games;
    private _auth;
    get auth(): Auth;
    private _devices;
    get devices(): Devices;
    private _groups;
    get groups(): Groups;
    private _logs;
    get logs(): Logs;
    private _tiers;
    get tiers(): Tiers;
    private _uploads;
    get uploads(): Uploads;
    private _getAuthorizationHeader;
}
