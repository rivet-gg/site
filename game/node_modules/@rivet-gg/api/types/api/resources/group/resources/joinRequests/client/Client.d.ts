/**
 * This file was auto-generated by Fern from our API Definition.
 */
import * as environments from "../../../../../../environments";
import * as core from "../../../../../../core";
import { Rivet } from "../../../../../..";
export declare namespace JoinRequests {
    interface Options {
        environment?: environments.RivetEnvironment | string;
        token?: core.Supplier<core.BearerToken | undefined>;
    }
}
export declare class JoinRequests {
    private readonly options;
    constructor(options: JoinRequests.Options);
    /**
     * Requests to join a group.
     * @throws {Rivet.InternalError}
     * @throws {Rivet.RateLimitError}
     * @throws {Rivet.ForbiddenError}
     * @throws {Rivet.UnauthorizedError}
     * @throws {Rivet.NotFoundError}
     * @throws {Rivet.BadRequestError}
     */
    createJoinRequest(groupId: string): Promise<void>;
    /**
     * Resolves a join request for a given group.
     * @throws {Rivet.InternalError}
     * @throws {Rivet.RateLimitError}
     * @throws {Rivet.ForbiddenError}
     * @throws {Rivet.UnauthorizedError}
     * @throws {Rivet.NotFoundError}
     * @throws {Rivet.BadRequestError}
     */
    resolveJoinRequest(groupId: string, identityId: string, request: Rivet.group.ResolveJoinRequestRequest): Promise<void>;
    private _getAuthorizationHeader;
}
